$layers: 15;
$step-z: 5px;
$size: 8vh;

.container {
  position: relative;
  font-size: $size;
  line-height: 0.75em;
  max-width: 90vw;
  width: max-content;
  perspective: 100px;
  perspective-origin: center;

  & > .placeholder {
    font-family: 'Source Code Pro', monospace;
    text-transform: uppercase;
    pointer-events: none;
    visibility: hidden;
    display: block;
  }

  & > svg {
    z-index: -100;
    pointer-events: none;
    position: absolute;
    left: 0;
    right: 0;
  }
}

.layers {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  transform: translateZ(calc(($(layers) - 2) * -1 * $(step-z)));
  transform-style: preserve-3d;
  font-family: 'Source Code Pro', monospace;
  text-transform: uppercase;

  & > span {
    width: 100%;
    height: 100%;
    position: absolute;
    transform-style: preserve-3d;
    font-weight: bold;
    color: black;
    text-shadow:
      -1px -1px 0 white,
      1px -1px 0 white,
      -1px 1px 0 white,
      1px 1px 0 white;
    will-change: transform;
    text-align: center;
    user-select: none;

    &:last-child {
      user-select: all;
    }
  }
}

@supports (-webkit-text-stroke: 1px white) {
  .layers > span {
    -webkit-text-stroke: 1.5px white;
    text-shadow: none;
  }
}

@for $i from 1 to $layers {
  .layers > span:nth-child($i) {
    transform: translateZ(calc(($(i) - 1) * $(step-z)));
    opacity: calc($(i) / $(layers));
  }
}

.before,
.after {
  z-index: 1;
  position: absolute;
  font-family: 'Audiowide';
  color: white;
  transform: translateZ(calc($(layers) * -1 * $(step-z)));
  transform-style: preserve-3d;

  & > span {
    position: absolute;
    transform-style: preserve-3d;
    transform: translateZ(calc($(layers) * $(step-z)));
    white-space: nowrap;
    text-shadow:
      0 0 20px white,
      0 0 15px white;
  }
}

.before {
  font-size: 3.5vh;
  top: -100%;
  display: flex;
  justify-content: flex-start;
  left: 0;
}

@media (--screen-sm-max) {
  .before {
    top: -50%;
    left: 25%;
  }
}

.after {
  font-size: 2.5vh;
  bottom: 0;
  display: flex;
  justify-content: flex-end;
  right: 0;

  &::before {
    position: absolution;
    display: block;
    content: ' ';
    background: red;
    clip-path: polygon(0 20%, 100% 0, 100% 100%, 0 83%);
  }
}
